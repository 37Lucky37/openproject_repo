pipeline {
    agent { label 'agent-build' } // –í–∏–∫–æ–Ω–∞–Ω–Ω—è –Ω–∞ –∞–≥–µ–Ω—Ç—ñ

    environment {
        REPO = "git@github.com:37Lucky37/openproject_repo.git"
        BRANCH = "main"
        CREDENTIALS_ID = "jenkins-openproject-cred" // ID SSH-–∫–ª—é—á–∞ –∑ Jenkins Credentials
        WORKSPACE_DIR = "${HOME}/openproject" // –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –¥–ª—è —Å—Ç—è–≥—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
        NODE_VERSION = "20.18.3"
        RUBY_VERSION = "3.4.1"
        BUNDLER_VERSION = "2.6.3"
    }

    stages {  // ‚ùó –û–¥–∏–Ω –±–ª–æ–∫ stages
        stage('Install System Dependencies') {
            steps {
                script {
                    sh """
                        echo 'üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å–∏—Å—Ç–µ–º–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ...'
                        sudo apt update && sudo apt install -y \
                          libffi-dev libyaml-dev libgmp-dev zlib1g-dev libssl-dev libreadline-dev \
                          libxml2-dev libxslt1-dev build-essential gcc g++ make libpq-dev memcached \
                          imagemagick libapr1 libaprutil1 libjansson4
                    """
                }
            }
        }

        stage('Install rbenv and Ruby') {  // ‚ùó –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–∫–ª–∞–¥–µ–Ω–Ω—è
            steps {
                script {
                    sh """
                        echo '‚¨áÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ rbenv...'
                        if [ ! -d "\$HOME/.rbenv" ]; then
                            git clone https://github.com/rbenv/rbenv.git \$HOME/.rbenv
                        else
                            echo '‚úÖ rbenv –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'
                        fi

                        echo 'export PATH="\$HOME/.rbenv/bin:\$PATH"' >> \$HOME/.bashrc
                        echo 'eval "\$(rbenv init -)"' >> \$HOME/.bashrc

                        echo '‚¨áÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ ruby-build...'
                        mkdir -p \$HOME/.rbenv/plugins
                        if [ ! -d "\$HOME/.rbenv/plugins/ruby-build" ]; then
                            git clone https://github.com/rbenv/ruby-build.git \$HOME/.rbenv/plugins/ruby-build
                        else
                            echo '‚úÖ ruby-build –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'
                        fi

                        echo '‚¨áÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Ruby ${RUBY_VERSION}...'
                        bash -c "source \$HOME/.bashrc && rbenv install ${RUBY_VERSION} -s && rbenv global ${RUBY_VERSION} && ruby -v"
                    """
                }
            }
        }

        stage('Prepare Workspace') {
            steps {
                script {
                    sh """
                        echo 'üõ†Ô∏è –û—á–∏—â–∞—î–º–æ —Ä–æ–±–æ—á—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é...'
                        rm -rf ${WORKSPACE_DIR}
                        mkdir -p ${WORKSPACE_DIR}
                    """
                }
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    checkout([$class: 'GitSCM',
                        branches: [[name: "*/${BRANCH}"]],
                        userRemoteConfigs: [[
                            url: REPO,
                            credentialsId: CREDENTIALS_ID
                        ]],
                        extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "${WORKSPACE_DIR}"]]
                    ])
                }
            }
        }

        stage('Install Node.js') {
            steps {
                script {
                    sh """
                        echo '‚¨áÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Node.js ${NODE_VERSION}...'
                        curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
                        sudo apt install -y nodejs
                        node -v
                        npm -v
                    """
                }
            }
        }

        stage('Install Gem Dependencies') {
            steps {
                script {
                    sh """
                        echo 'üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Gem –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ...'
                        cd ${WORKSPACE_DIR}
                        bundle install --without development test
                    """
                }
            }
        }

        stage('Install npm Dependencies') {
            steps {
                script {
                    sh """
                        echo 'üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ npm –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ...'
                        cd ${WORKSPACE_DIR}
                        if [ -f package.json ]; then
                            npm install
                        else
                            echo '‚ö†Ô∏è package.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è.'
                        fi
                    """
                }
            }
        }

        stage('Verify Installation') {
            steps {
                script {
                    sh """
                        echo '‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ:'
                        ruby -v
                        bundler -v
                        node -v
                        npm -v
                    """
                }
            }
        }

        stage('Run Simple Test') {
            steps {
                script {
                    sh """
                        echo '‚úÖ –í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç–æ–≤—É –∫–æ–º–∞–Ω–¥—É:'
                        echo 'Hello, Jenkins Agent!'
                    """
                }
            }
        }

        stage('Check Environment') {
            steps {
                script {
                    sh """
                        echo 'üñ•Ô∏è –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –Ω–∞ –∞–≥–µ–Ω—Ç—ñ:'
                        uname -a
                        whoami
                        pwd
                    """
                }
            }
        }
    } // ‚ùó –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —î–¥–∏–Ω–∏–π –±–ª–æ–∫ `stages`
} // ‚ùó –ó–∞–∫—Ä–∏–≤–∞—î–º–æ `pipeline`
